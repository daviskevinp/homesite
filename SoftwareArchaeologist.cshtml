@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Software Archaeologists";
}
<p>
What is a Software Archaeologist?
</p><p>
Most of us that deal in corporate Information Technology shops are Software Archaeologists.  Every organization I’ve seen and many I’ve talked to has a built-up layer of legacy applications that are older and in disrepair.  While many of these applications are used daily, it may have been years since they were opened, rebuilt, refactored.  The source code may be missing, and the original authors may be long gone from the organization, taking their knowledge of the application with them.
</p><p> 
It’s this organizational brain-drain that makes many of us in corporate IT into Software Archaeologists.  Every time a developer has to don his leather fedora and dive into an ancient codebase with little to guide him but a few cryptic comments littered in the code tomb, and a document that some long-ago intern put together in a half hour to meet a letter-of-the-law requirement in the SDLC that was enforced at the time, that developer becomes an archaeologist. 
</p><p>
Even those developers who only develop new applications need to be versed in Software Archaeology, because nowadays many internally developed applications are on end-of-life platforms or hardware, being scoped for moving to the cloud, or are being revisited as part of Business Process Reengineering.
</p><p>
As a Software Archaeologist it pays to know not only today’s architecture, but those of the past, especially those that were popular in the organization around the time the code was written.  But not limited to the standard architectures of the day.  Organizations hire people who come in to try their hand at something new, or bring in some flavor-of-the-day architecture, tool, library.  As a result, one-off applications are going to be unearthed.  As architectures become archeological layers in the binary geological strata of an organization, so do architects become archaeologists.
</p><p>
I have a deep appreciation for all my colleagues who perform software archaeology on a daily basis. 
</p><p>
I respect the dig.
</p>